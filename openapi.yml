openapi: 3.0.3
info:
  version: '1.0'
  title: 'OpenAPI Course'
  description: 'Specification for OpenAPI Course'
  termsOfService: https://example.com/terms
  contact: 
    name: Rouche
    url: https://github.com/Rouche
    email: rouche@server.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers: 
  - url: https://dev.example.com
    description: DEV server
  - url: https://qa.example.com
    description: QA server
  - url: https://prod.example.com
    description: PROD server
paths:
  /v1/customers:
    get:
      responses:
        '200': 
          description: List of customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerList"

  /v1/beers:
    get:
      responses:
        '200': 
          description: List of customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeerList"
                   
        '404':
          description: Not found
          
          
components:
  schemas:
    Address:
      type: object
      description: Address object
      properties:
        line1:
          type: string
        city:
          type: string
          example: Zomg!
        stateCode:
          type: string
          maxLength: 2
          minLength: 2
          description: 2 letter state code
          # enum: [AL, SK, NY, AZ, FL]
          enum:
            - AL
            - SK
            - NY
            - AZ
            - FL
        zipCode:
          type: string
          example: 33701    
          
    Customer:
      type: object
      description: Customer object
      properties:
        id:
          type: string
          format: uuid
        firstName: 
          type: string
          minLength: 2
          maxLength: 100
        lastNamne:
          type: string
          minLength: 2
          maxLength: 100
          example: Fuck!
        address:
          $ref: "#/components/schemas/Address"
          
    CustomerList:
      type: array
      minItems: 1
      maxItems: 100
      description: List of customers
      items:
        $ref: "#/components/schemas/Customer"
    
    Beer:
      type: object
      description: Beer Object
      properties:
        name:
          type: string
          description: Customer Name
          minLength: 2
          maxLength: 100
        style:
          type: string
          enum: [ALE, PALE_ALE, IPA, WHEAT, LAGER]
        price:
          type: number
          format: float
        quantityOnHand:
          type: integer
          format: int32
        brewery:
          $ref: "#/components/schemas/Brewery"

    Brewery:
      type: object
      description: Brewery object
      properties:
        name:
          type: string
        location:
          type: string

    BeerList:
      type: array
      description: List of beers
      minItems: 1
      maxItems: 100
      items:
        $ref: "#/components/schemas/Beer"    